name: Authorization API Test and Deploy
on: [push]

permissions:
  id-token: write
  contents: read

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.13
      - name: Install dependencies
        run: make install
      - name: Test with pytest
        run: make tests
      - name: Format code
        run: make format
      - name: Run Tests
        run: make tests

  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: gave44362/myapp:latest

  terraform_apply:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Format
        run: terraformFormat
      - name: Terraform Validate
        run: terraformValidate
      - name: Terraform Plan
        run: terraformPlan
      - name: Terraform apply
        run: terraformApply

  deploy-azure:
    needs: terraform_apply
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Run Azure CLI commands'
        run: |
          az containerapp up \
            --name my-container-app \
            --resource-group my-apps \
            --location centralus \
            --environment 'my-container-apps' \
            --image gave44362/myapp:latest \
            --target-port 9000 \
            --ingress external \
            --query properties.configuration.ingress.fqdn
